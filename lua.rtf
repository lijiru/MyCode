{\rtf1\ansi\ansicpg936\cocoartf1265\cocoasubrtf190
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 STHeitiSC-Light;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red0\green68\blue254;\red41\green0\blue130;\red164\green8\blue0;
\red0\green31\blue103;\red100\green14\blue47;\red0\green20\blue69;\red20\green0\blue65;\red170\green13\blue145;
\red63\green110\blue116;\red0\green116\blue0;\red38\green71\blue75;\red28\green0\blue207;\red100\green56\blue32;
\red196\green26\blue22;\red255\green83\blue8;}
\paperw11900\paperh16840\margl1440\margr1440\vieww18220\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs28 \cf0 print("123456")\
print(b)\
b = 10\
\
\cf2 --8
\f1 \'b8\'f6\'bb\'f9\'b1\'be\'c0\'e0\'d0\'cd
\f0 \cf0 \
--[[\
print(b)\
print(type("Hello world"))\
print(type(10.2*2))\
print(type(print))\
print(type(type))\
print(type(true))\
print(type(nil))\
print(type(type(X)))\
]]\
\
--[[\
a = "one string"\
b = string.gsub(a,"one","another")\
--
\f1 \cf3 \'b8\'c4\'b1\'e4\'d7\'d6\'b7\'fb\'b4\'ae
\f0 \cf0 a
\f1 \'d6\'d0
\f0 one
\f1 \'ce\'aa
\f0 another\
print(a)\
print(b)\
]]\
\
--[[\
print("10"+1)\
print("10 + 1")\
--print("-5.3e - 10" * "2")\
--print("hello" + 1)\
print("10".."20")\
print(10 ..20)\
]]\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf3 \'97
\f1 \'ba\'af\'ca\'fd
\f0 \cf0 \
--[[\
b = 10;\
function test( )\
	local b = 11\
	--
\f1 \'bc\'d3
\f0 \cf4 local
\f1 \cf0 \'d6\'bb\'c4\'dc\'d4\'da\'b1\'be
\f0 lua
\f1 \'ce\'c4\'bc\'fe\'c4\'da\'ca\'b9\'d3\'c3
\f0 \
	print(b)\
	print("function")\
end\
test()\
print(b)\
\
function max( a,b )\
	if a>b then\
		return a\
	else\
		return b\
	end\
end\
print(max(5,10))\
\
for var=1,100,2 do\
	print(var)\
end\
]]\
\

\f1 \cf5 \'ca\'fd\'d7\'e9\'a3\'ac\'bc\'fc\'d6\'b5\'b6\'d4
\f0 \cf0 \
--[[\
Config = \{hello="Hello Lua",age=50\}\
Config.words="Hello World"\
Config.number=100\
--print(Config["hello"])\
--print(Config.words)\
--print(Config.number)\
for key,var in pairs(Config) do\
	print(key,var)\
end\
\
days = \{"Sunday", "Monday", "Tuesday", "Wednesday","Thursday", "Friday", "Saturday"\}\
print(days[4])\
for key,var in pairs(days) do\
	print(key,var)\
end\
]]\
\
--[[\
arr=\{1,2,3,4,"Hello"\}\
for key,var in pairs(arr) do\
  print(key,var)\
end\
arr=\{\}\
for var=1,100 do\
 table.insert(arr,1,var)\
end\
\
for key,var in pairs(arr) do\
 print(key,var)\
end\
\
print(table.maxn(arr))\
print(#arr)\
]]\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\fs36 \cf6 \'97\'97\'97pairs
\f1 \'ba\'cdi
\f0 pairs
\f1 \'b5\'c4\'c7\'f8\'b1\'f0
\f0\fs28 \cf0 \
local tabFiles = \{  \
 [3] = "test2",  \
 [6] = "test3",  \
 [4] = "test1"  \
\}     \
 for k, v in ipairs(tabFiles) do  \
   print(k, v)  \
  end  \
\
for k, v in pairs(tabFiles) do  \
  print(k, v)  \
 end \
\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\fs36 \cf7 \ul \ulc7 --
\f1 \'c3\'e6\'cf\'f2\'b6\'d4\'cf\'f3
\f0\fs28 \cf0 \ulnone \
--[[\
Hero = \{attack = 100\}  \
\
function Hero.skill(addAttack) \
     Hero.attack = Hero.attack + addAttack \
end \
   \
Hero.skill(20) \
print(Hero.attack)\
\
\
oneHero = Hero; \
Hero = nil \
oneHero.skill(30) \
print(oneHero.attack) --> 
\f1 \'b4\'ed\'ce\'f3\'a3\'ac
\f0 oneHero
\f1 \'ce\'aa
\f0 nil\
]]\
\
Hero = \{attack = 100\} \
   \
function Hero.skill(self,addAttack) \
 	self.attack = self.attack + addAttack \
end \
   \
oneHero = Hero; \
Hero = nil \
oneHero.skill(oneHero,30) \
print(oneHero.attack)\
\
twoHero = oneHero;\
--oneHero = nil\
twoHero.skill(twoHero,10)\
print(twoHero.attack) \'97\'97\'97140\
print(oneHero.attack) \'97\'97\'97140\
\
\
--
\f1 \'b0\'d1\'b5\'e3\'b8\'c4\'b3\'c9\'c3\'b0\'ba\'c5\'a3\'ac\'bf\'c9\'d2\'d4\cf8 \'d2\'fe\'d0\'d4\'b5\'f7\'d3\'c3
\f0 self\cf0 \
--
\f1 \'c3\'b0\'ba\'c5\'bf\'c9\'d2\'d4\'d4\'da\'b7\'bd\'b7\'a8\'d6\'d0\'cc\'ed\'bc\'d3\'d2\'bb\'b8\'f6\'b6\'ee\'cd\'e2\'b5\'c4\'d2\'fe\'b2\'d8\'b2\'ce\'ca\'fd
\f0 \
Hero = \{attack = 100\} \
function Hero:skill(addAttack) \
   self.attack = self.attack + addAttack \
end \
   \
oneHero = Hero; \
Hero = nil \
oneHero:skill(30) \
print(oneHero.attack)\
\
--[[\
--
\f1 \'b0\'d1\'b5\'e3\'b8\'c4\'b3\'c9\'c3\'b0\'ba\'c5\'a3\'ac\'bf\'c9\'d2\'d4\'d2\'fe\'d0\'d4\'b5\'f7\'d3\'c3
\f0 self\
--
\f1 \'c3\'b0\'ba\'c5\'bf\'c9\'d2\'d4\'d4\'da\'b7\'bd\'b7\'a8\'d6\'d0\'cc\'ed\'bc\'d3\'d2\'bb\'b8\'f6\'b6\'ee\'cd\'e2\'b5\'c4\'d2\'fe\'b2\'d8\'b2\'ce\'ca\'fd
\f0 \
Hero = \{attack = 100\} \
function Hero:skill(addAttack) \
   self.attack = self.attack + addAttack \
end \
   \
oneHero = Hero; \
Hero = nil \
oneHero:skill(30) \
print(oneHero.attack)\
]]\
\
\cf3 --
\f1 \'c0\'e0
\f0 \cf0 \
Hero = \{\}\
\
function Hero:new(o)\
	o = o or \{\}\
	setmetatable(o,self)\
	self.__index = self\
	return o\
end\
\
function Hero:skill(addAttack)\
	--self.attack\'a0= self.attack\'a0+ addAttack\
	self.attack = self.attack + addAttack\
end\
\
--oneHero = Hero:new\{attack\'a0= 90\}\
oneHero = Hero:new\{attack = 90\}\
oneHero:skill(10)\
print(oneHero.attack)\
/////////////////////////////////////////////////////////////////AppDelegate.cpp//////////////////////////////////////////////////////////////////////////
\f2\fs32 \CocoaLigature0 \
\pard\tx770\pardeftab770\pardirnatural

\fs28 \cf9 bool\cf0  \cf10 AppDelegate\cf0 ::applicationDidFinishLaunching()\
\{\
    \cf11 // 
\f1 \'b3\'f5\'ca\'bc\'bb\'af\'cf\'d4\'ca\'be\'c9\'e8\'b1\'b8
\f2 \cf0 \
    \cf10 CCDirector\cf0  *pDirector = \cf10 CCDirector\cf0 ::\cf12 sharedDirector\cf0 ();\
    \cf11 // 
\f1 \'c9\'e8\'d6\'c3\'cf\'d4\'ca\'be\'c9\'e8\'b1\'b8\'ca\'b9\'d3\'c3
\f2 initInstance
\f1 \'ba\'af\'ca\'fd\'b4\'b4\'bd\'a8\'b5\'c4
\f2 OpenGL
\f1 \'ca\'d3\'b4\'b0
\f2 \cf0 \
    pDirector->\cf12 setOpenGLView\cf0 (\cf10 CCEGLView\cf0 ::\cf12 sharedOpenGLView\cf0 ());\
    \cf11 //
\f1 \'ca\'b9\'d3\'c3\'b8\'df\'c7\'e5\'c4\'a3\'ca\'bd
\f2 \cf0 \
    \cf11 // pDirector->enableRetinaDisplay(true);\cf0 \
    \
    \cf11 // 
\f1 \'c9\'e8\'d6\'c3\'cf\'d4\'ca\'be
\f2 FPS\cf0 \
    pDirector->\cf12 setDisplayStats\cf0 (\cf9 true\cf0 );\
    \cf11 //
\f1 \'c9\'e8\'d6\'c3\'c9\'e8\'b1\'b8\'b5\'c4\'cf\'d4\'ca\'be\'b7\'bd\'cf\'f2
\f2 \cf0 \
    \cf11 // pDirector->setDeviceOrientation(kCCDeviceOrientationLandscapeLeft);\cf0 \
    \cf11 //
\f1 \'c9\'e8\'d6\'c3
\f2 FPS
\f1 \'d6\'a1\'bc\'e4\'b8\'f4\'ca\'b1\'bc\'e4
\f2 \cf0 \
    pDirector->\cf12 setAnimationInterval\cf0 (\cf13 1.0\cf0  / \cf13 60\cf0 );\
\
    \cf10 CCEGLView\cf0 ::\cf12 sharedOpenGLView\cf0 ()->\cf12 setDesignResolutionSize\cf0 (\cf13 480\cf0 , \cf13 320\cf0 , \cf12 kResolutionExactFit\cf0 );\
    \
    \cf11 // register lua engine\cf0 \
    \cf10 CCLuaEngine\cf0 * pEngine = \cf10 CCLuaEngine\cf0 ::\cf12 defaultEngine\cf0 ();\
    \cf11 // 
\f1 \'cd\'a8\'b9\'fd
\f2 CCScripEngineManager
\f1 \'b5\'c4\'be\'b2\'cc\'ac\'ba\'af\'ca\'fd
\f2 sharedManager
\f1 \'bb\'f1\'c8\'a1\'b5\'a5\'bc\'fe\'bd\'c5\'b1\'be\'d2\'fd\'c7\'e6\'b9\'dc\'c0\'ed\'c6\'f7\'b5\'c4\'ca\'b5\'c0\'fd\'b6\'d4\'cf\'f3\'d6\'b8\'d5\'eb\'a3\'ac\'b2\'a2\'bd\'ab\'c9\'cf\'d2\'bb\'be\'e4\'b4\'b4\'bd\'a8\'b5\'c4
\f2 LUA
\f1 \'bd\'c5\'b1\'be\'d2\'fd\'c7\'e6\'ca\'b5\'c0\'fd\'b6\'d4\'cf\'f3\'d6\'b8\'d5\'eb\'c9\'e8\'ce\'aa\'bd\'c5\'b1\'be\'d2\'fd\'c7\'e6\'b9\'dc\'c0\'ed\'c6\'f7\'b5\'b1\'c7\'b0\'bd\'f8\'d0\'d0\'b9\'dc\'c0\'ed\'b5\'c4\'bd\'c5\'b1\'be\'d2\'fd\'c7\'e6\'a1\'a3
\f2 \cf0 \
    \cf10 CCScriptEngineManager\cf0 ::\cf12 sharedManager\cf0 ()->\cf12 setScriptEngine\cf0 (pEngine);\
\
    \cf10 CCLuaStack\cf0  *pStack = pEngine->\cf12 getLuaStack\cf0 ();\
    \cf10 lua_State\cf0  *tolua_s = pStack->\cf12 getLuaState\cf0 ();\
    \cf12 tolua_extensions_ccb_open\cf0 (tolua_s);\
\cf14 #if (CC_TARGET_PLATFORM == CC_PLATFORM_IOS || CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID || CC_TARGET_PLATFORM == CC_PLATFORM_WIN32)\
\cf0     pStack = pEngine->getLuaStack();\
    tolua_s = pStack->getLuaState();\
    tolua_web_socket_open(tolua_s);\
\cf14 #endif\
\cf0     \cf11 //
\f1 \'ba\'da\'dd\'ae
\f2 \cf0 \
\cf14 #if (CC_TARGET_PLATFORM == CC_PLATFORM_BLACKBERRY)\
\cf0     CCFileUtils::sharedFileUtils()->addSearchPath(\cf15 "script"\cf0 );\
\cf14 #endif\
\cf0 \
    std::string path = CCFileUtils::sharedFileUtils()->fullPathForFilename(\cf15 "hello.lua"\cf0 );\
    pEngine->executeScriptFile(path.c_str());\
\
    \cf9 return\cf0  \cf9 true\cf0 ;\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0 \cf0 \CocoaLigature1 \
////////////////////////////////////////////////////////////////////////hello.lua//////////////////////////////////////////////////////////////////////////\
require "AudioEngine" \
\
-- for CCLuaEngine traceback\
\cf6 --
\f1 \'b4\'ed\'ce\'f3\'cc\'e1\'ca\'be
\f0 \cf0 \
function __G__TRACKBACK__(msg)\
    print("----------------------------------------")\
    print("LUA ERROR: " .. tostring(msg) .. "\\n")\
    print(debug.traceback())\
    print("----------------------------------------")\
end\
\
--
\f1 \'d6\'f7\'ba\'af\'ca\'fd
\f0 \
local function main()\
    -- avoid memory leak  \
    --
\f1 \'b1\'dc\'c3\'e2\'c4\'da\'b4\'e6\'d0\'b9\'c2\'a9
\f0 \
    -- 
\f1 \'c9\'e8\'b6\'a8
\f0 LUAGC
\f1 \'b5\'c4\cf4 \'c0\'ad\'bb\'f8\'bb\'d8\'ca\'d5\'b2\'ce\'ca\'fd
\f0 \cf0 \
    collectgarbage("setpause", 100)\
    collectgarbage("setstepmul", 5000)\
    --[[\
    collectgarbage (opt [, arg])\

\f1 \'a1\'a1\'a1\'a1\'b9\'a6\'c4\'dc\'a3\'ba\'ca\'c7\'c0\'ac\'bb\'f8\'ca\'d5\'bc\'af\'c6\'f7\'b5\'c4\'cd\'a8\'d3\'c3\'bd\'d3\'bf\'da\'a3\'ac\'d3\'c3\'d3\'da\'b2\'d9\'d7\'f7\'c0\'ac\'bb\'f8\'ca\'d5\'bc\'af\'c6\'f7
\f0 \

\f1 \'a1\'a1\'a1\'a1\'b2\'ce\'ca\'fd\'a3\'ba
\f0 \

\f1 \'a1\'a1\'a1\'a1
\f0 opt
\f1 \'a3\'ba\'b2\'d9\'d7\'f7\'b7\'bd\'b7\'a8\'b1\'ea\'d6\'be
\f0 \

\f1 \'a1\'a1\'a1\'a1
\f0 "Stop": 
\f1 \'cd\'a3\'d6\'b9\'c0\'ac\'bb\'f8\'ca\'d5\'bc\'af\'c6\'f7
\f0 \

\f1 \'a1\'a1\'a1\'a1
\f0 "Restart": 
\f1 \'d6\'d8\'c6\'f4\'c0\'ac\'bb\'f8\'ca\'d5\'bc\'af\'c6\'f7
\f0 \

\f1 \'a1\'a1\'a1\'a1
\f0 "Collect": 
\f1 \'d6\'b4\'d0\'d0\'d2\'bb\'b4\'ce\'c8\'ab\'c0\'ac\'bb\'f8\'ca\'d5\'bc\'af\'d1\'ad\'bb\'b7
\f0 \

\f1 \'a1\'a1\'a1\'a1
\f0 "Count": 
\f1 \'b7\'b5\'bb\'d8\'b5\'b1\'c7\'b0
\f0 Lua
\f1 \'d6\'d0\'ca\'b9\'d3\'c3\'b5\'c4\'c4\'da\'b4\'e6\'c1\'bf
\f0 (
\f1 \'d2\'d4
\f0 KB
\f1 \'ce\'aa\'b5\'a5\'ce\'bb
\f0 )\

\f1 \'a1\'a1\'a1\'a1
\f0 "Step": 
\f1 \'b5\'a5\'b2\'bd\'d6\'b4\'d0\'d0\'d2\'bb\'b8\'f6\'c0\'ac\'bb\'f8\'ca\'d5\'bc\'af
\f0 . 
\f1 \'b2\'bd\'b3\'a4
\f0  "Size" 
\f1 \'d3\'c9\'b2\'ce\'ca\'fd
\f0 arg
\f1 \'d6\'b8\'b6\'a8\'a1\'a1
\f0 (
\f1 \'b4\'f3\'d0\'cd\'b5\'c4\'d6\'b5\'d0\'e8\'d2\'aa\'b6\'e0\'b2\'bd\'b2\'c5\'c4\'dc\'cd\'ea\'b3\'c9
\f0 )
\f1 \'a3\'ac\'c8\'e7\'b9\'fb\'d2\'aa\'d7\'bc\'c8\'b7\'d6\'b8\'b6\'a8\'b2\'bd\'b3\'a4\'a3\'ac\'d0\'e8\'d2\'aa\'b6\'e0\'b4\'ce\'ca\'b5\'d1\'e9\'d2\'d4\'b4\'ef\'d7\'ee\'d3\'c5\'d0\'a7\'b9\'fb\'a1\'a3\'c8\'e7\'b9\'fb\'b2\'bd\'b3\'a4\'cd\'ea\'b3\'c9\'d2\'bb\'b4\'ce\'ca\'d5\'bc\'af\'d1\'ad\'bb\'b7\'a3\'ac\'bd\'ab\'b7\'b5\'bb\'d8
\f0 True\

\f1 \'a1\'a1\'a1\'a1
\f0 "Setpause": 
\f1 \'c9\'e8\'d6\'c3
\f0  arg/100 
\f1 \'b5\'c4\'d6\'b5\'d7\'f7\'ce\'aa\'d4\'dd\'b6\'a8\'ca\'d5\'bc\'af\'b5\'c4\'ca\'b1\'b3\'a4
\f0 \

\f1 \'a1\'a1\'a1\'a1
\f0 "Setstepmul": 
\f1 \'c9\'e8\'d6\'c3
\f0  arg/100 
\f1 \'b5\'c4\'d6\'b5\'a3\'ac\'d7\'f7\'ce\'aa\'b2\'bd\'b3\'a4\'b5\'c4\'d4\'f6\'b7\'f9
\f0 (
\f1 \'bc\'b4\'d0\'c2\'b2\'bd\'b3\'a4
\f0 =
\f1 \'be\'c9\'b2\'bd\'b3\'a4
\f0 *arg/100)\
   ]]\
    local cclog = function(...)\
        print(string.format(...))\
    end\
\
    require "hello2"\
    cclog("result is " .. myadd(3, 5))\
\
    ---------------\
\
    local visibleSize = CCDirector:sharedDirector():getVisibleSize()\
    local origin = CCDirector:sharedDirector():getVisibleOrigin()\
\
    -- add the moving dog\
    -- 
\f1 \'b6\'a8\'d2\'e5
\f0 createDog
\f1 \'ba\'af\'ca\'fd\cf16 \'b4\'b4\'bd\'a8\'cb\'c9\'ca\'f3
\f0 \cf0 \
    local function creatDog()\
        --
\f1 \'b6\'a8\'d2\'e5\'c1\'bd\'b8\'f6\'b1\'e4\'c1\'bf\'ce\'aa\'c3\'bf\'d2\'bb\'d6\'a1\'cd\'bc\'bf\'e9\'b5\'c4\'bf\'ed\'b8\'df
\f0 \
        local frameWidth = 105\
        local frameHeight = 95\
\
        -- create dog animate\
        -- 
\f1 \'b4\'b4\'bd\'a8\'cb\'c9\'ca\'f3\'b5\'c4\'b6\'af\'bb\'ad
\f0  \
        -- 
\f1 \'cf\'c8\'ca\'b9\'d3\'c3
\f0 CCTextureCache:sharedTextureCache()
\f1 \'c8\'a1\'b5\'c3\'ce\'c6\'c0\'ed\'bf\'e9\'b9\'dc\'c0\'ed\'c6\'f7\'a3\'ac\'bd\'ab
\f0 dog.png
\f1 \'b7\'c5\'c8\'eb\'ce\'c6\'c0\'ed\'bf\'e9\'b9\'dc\'c0\'ed\'c6\'f7\'b2\'fa\'c9\'fa\'d2\'bb\'d5\'c5\'ce\'c6\'c0\'ed\'b7\'b5\'bb\'d8\'b8\'f8\'b1\'e4\'c1\'bf
\f0 textureDog\
        local textureDog = CCTextureCache:sharedTextureCache():addImage("dog.png")\
        --
\f1 \'b4\'b4\'bd\'a8\'d2\'bb\'b8\'f6\'be\'d8\'d0\'ce\'b7\'b5\'bb\'d8\'b8\'f8\'b1\'e4\'c1\'bf
\f0 rect\
        local rect = CCRectMake(0, 0, frameWidth, frameHeight)\
        --
\f1 \'d3\'c9\'d5\'e2\'b8\'f6\'be\'d8\'d0\'ce\'b4\'d3\'ce\'c6\'c0\'ed\'c9\'cf\'c8\'a1\'b3\'f6\'cd\'bc\'bf\'e9\'b2\'fa\'c9\'fa\'d2\'bb\'b8\'f6
\f0 CCSpriteFrame
\f1 \'d6\'b8\'d5\'eb\'b7\'b5\'bb\'d8\'b8\'f8\'b1\'e4\'c1\'bf
\f0 frame0 \
        local frame0 = CCSpriteFrame:createWithTexture(textureDog, rect)\
        --
\f1 \'bb\'bb\'d2\'bb\'b8\'f6\'d0\'c2\'b5\'c4\'ce\'bb\'d6\'c3\'b5\'c4\'be\'d8\'d0\'ce\'b7\'b5\'bb\'d8\'b8\'f8\'b1\'e4\'c1\'bf
\f0 rect
\f1 \'d6\'d0
\f0 \
        rect = CCRectMake(frameWidth, 0, frameWidth, frameHeight)\
        --
\f1 \'d3\'c9\'b5\'da\'b6\'fe\'b8\'f6\'be\'d8\'d0\'ce\'b4\'d3\'ce\'c6\'c0\'ed\'c9\'cf\'c8\'a1\'b3\'f6\'cd\'bc\'bf\'e9\'b2\'fa\'c9\'fa\'d2\'bb\'b8\'f6
\f0 CCSpriteFrame
\f1 \'d6\'b8\'d5\'eb\'b7\'b5\'bb\'d8\'b8\'f8\'b1\'e4\'c1\'bf
\f0 frame1\
        local frame1 = CCSpriteFrame:createWithTexture(textureDog, rect)\
\
        --
\f1 \'b4\'d3
\f0 frame0
\f1 \'b2\'fa\'c9\'fa\'d2\'bb\'b8\'f6\'be\'ab\'c1\'e9\'b7\'b5\'bb\'d8\'b8\'f8\'b1\'e4\'c1\'bf
\f0 spriteDog(
\f1 \'d4\'da
\f0 C++
\f1 \'d6\'d0\'ca\'c7
\f0 CCSprite
\f1 \'d6\'b8\'d5\'eb
\f0 )\
        local spriteDog = CCSprite:createWithSpriteFrame(frame0)\
        --
\f1 \'c9\'e8\'d6\'c3\'b3\'f5\'ca\'bc\'bb\'af\'ca\'b1
\f0 \
        spriteDog.isPaused = false\
        --
\f1 \'c9\'e8\'d6\'c3\'be\'ab\'c1\'e9\'b5\'c4\'ce\'bb\'d6\'c3\'d4\'da\'d7\'f3\'c9\'cf\'b5\'c4\'ce\'bb\'d6\'c3
\f0 \
        spriteDog:setPosition(origin.x, origin.y + visibleSize.height / 4 * 3)\
\
        --
\f1 \'c9\'fa\'b3\'c9\'d2\'bb\'b8\'f6\'c9\'e8\'b6\'a8\'b4\'f3\'d0\'a1\'ce\'aa
\f0 2
\f1 \'b5\'c4
\f0 CCMutableArray
\f1 \'c0\'e0\'b5\'c4\'ca\'b5\'c0\'fd\'b6\'d4\'cf\'f3\'a1\'a3\'d3\'c3\'c0\'b4\'b4\'e6\'b4\'a2
\f0 CCSpriteFrame
\f1 \'d6\'b8\'d5\'eb\'a3\'ac\'bd\'ab\'c6\'e4\'d6\'b8\'d5\'eb\'b7\'b5\'bb\'d8\'b8\'f8\'b1\'e4\'c1\'bf
\f0 animFrames\
        local animFrames = CCArray:create()\
\
        --
\f1 \'b5\'f7\'d3\'c3
\f0 addObject
\f1 \'bd\'ab
\f0 frame0
\f1 \'ba\'cd
\f0 frame1
\f1 \'b7\'c5\'c8\'eb
\f0 animFrames\
        animFrames:addObject(frame0)\
        animFrames:addObject(frame1)\
\
        --
\f1 \'d3\'c9\'c8\'dd\'c6\'f7\'c0\'e0\'ca\'b5\'c0\'fd\'b6\'d4\'cf\'f3\'b5\'c4\'d6\'b8\'d5\'eb
\f0 animFrames
\f1 \'b4\'b4\'bd\'a8\'d2\'bb\'b8\'f6\'b6\'af\'bb\'ad\'d6\'a1\'d0\'c5\'cf\'a2\'b6\'d4\'cf\'f3\'a3\'ac\'c9\'e8\'b6\'a8\'c3\'bf
\f0 0.5
\f1 \'c3\'eb\'b8\'fc\'d0\'c2\'d2\'bb\'d6\'a1
\f0 ,
\f1 \'b7\'b5\'bb\'d8\'b6\'af\'bb\'ad\'d6\'a1\'d0\'c5\'cf\'a2\'b6\'d4\'cf\'f3\'d6\'b8\'d5\'eb\'b8\'f8\'b1\'e4\'c1\'bf
\f0 animation \
        local animation = CCAnimation:createWithSpriteFrames(animFrames, 0.5)\
        --
\f1 \'d3\'c9
\f0 animation
\f1 \'b4\'b4\'bd\'a8\'b3\'f6\'d2\'bb\'b8\'f6\'b6\'af\'bb\'ad\'b6\'af\'d7\'f7\'a3\'ac\'bd\'ab\'d5\'e2\'b8\'f6\'b6\'af\'bb\'ad\'b6\'af\'d7\'f7\'b5\'c4\'d6\'b8\'d5\'eb\'b8\'f8\'b1\'e4\'c1\'bf
\f0 animate\
        local animate = CCAnimate:create(animation);\
        --
\f1 \'c9\'e8\'d6\'c3\'be\'ab\'c1\'e9\'d1\'ad\'bb\'b7\'d4\'cb\'d0\'d0\'d5\'e2\'b8\'f6\'b6\'af\'d7\'f7
\f0 \
        spriteDog:runAction(CCRepeatForever:create(animate))\
\
        -- moving dog at every frame\
        -- 
\f1 \'c3\'bf\'d6\'a1\'d2\'c6\'b6\'af\'cb\'c9\'ca\'f3
\f0 \
        local function tick()\
            --
\f1 \'c8\'e7\'b9\'fb\'cb\'c9\'ca\'f3\'cd\'a3\'d6\'b9\'b6\'af\'d7\'f7\'a3\'ac\'d4\'f2\'b7\'b5\'bb\'d8
\f0 \
            if spriteDog.isPaused then return end\
            local x, y = spriteDog:getPosition()\
            --
\f1 \'c8\'e7\'b9\'fb\'cb\'c9\'ca\'f3\'b5\'c4
\f0 x
\f1 \'d6\'b5\'d2\'d1\'be\'ad\'b3\'ac\'b3\'f6\'c6\'c1\'c4\'bb\'bf\'ed\'b6\'c8\'bd\'ab
\f0 x
\f1 \'ce\'bb\'d6\'c3\'b1\'e4\'ce\'aa
\f0 0
\f1 \'a3\'ac\'b7\'f1\'d4\'f2\'bc\'d3
\f0 1
\f1 \'a3\'ac\'d5\'e2\'d1\'f9\'bf\'c9\'d2\'d4\'ca\'b5\'cf\'d6\'b2\'bb\'b6\'cf\'b5\'c4\'cd\'f9\'d3\'d2\'d2\'c6\'b6\'af\'a3\'ac\'b3\'ac\'b3\'f6\'ba\'f3\'be\'cd\'d3\'d6\'bb\'d8\'b5\'bd\'d7\'ee\'d7\'f3\'b1\'df
\f0  \
            if x > origin.x + visibleSize.width then\
                x = origin.x\
            else\
                x = x + 1\
            end\
            --
\f1 \'d6\'d8\'d0\'c2\'c9\'e8\'d6\'c3\'cb\'c9\'ca\'f3\'ce\'bb\'d6\'c3
\f0 \
            spriteDog:setPositionX(x)\
        end\
        --
\f1 \'d5\'e2\'c0\'ef\'c9\'e8\'d6\'c3\'c3\'bf\'d6\'a1\'b5\'f7\'d3\'c3\'c9\'cf\'c3\'e6\'b5\'c4\'ba\'af\'ca\'fd
\f0 tick \
        CCDirector:sharedDirector():getScheduler():scheduleScriptFunc(tick, 0, false)\
        --
\f1 \'b7\'b5\'bb\'d8\'cb\'c9\'ca\'f3\'be\'ab\'c1\'e9
\f0 \
        return spriteDog\
    end\
\
    -- create farm\
    -- 
\f1 \'b4\'b4\'bd\'a8\'c5\'a9\'b3\'a1
\f0 \
    local function createLayerFarm()\
        --
\f1 \'b4\'b4\'bd\'a8\'d2\'bb\'b8\'f6\'d0\'c2\'b5\'c4
\f0 Layer
\f1 \'ca\'b5\'c0\'fd\'b6\'d4\'cf\'f3\'a3\'ac\'bd\'ab\'d6\'b8\'d5\'eb\'b7\'b5\'bb\'d8\'b8\'f8\'b1\'e4\'c1\'bf
\f0 layerFarm \
        local layerFarm = CCLayer:create()\
\
        -- 
\f1 \'cc\'ed\'bc\'d3\'c5\'a9\'b3\'a1\'b1\'b3\'be\'b0
\f0 \
        -- 
\f1 \'d3\'c9
\f0 \'93farm.jpg\'94
\f1 \'b4\'b4\'bd\'a8\'d2\'bb\'b8\'f6\'be\'ab\'c1\'e9\'ca\'b5\'c0\'fd\'a3\'ac\'bd\'ab\'d6\'b8\'d5\'eb\'b7\'b5\'bb\'d8\'b8\'f8\'b1\'e4\'c1\'bf
\f0 bg\
        local bg = CCSprite:create("farm.jpg")\
        ---
\f1 \'c9\'e8\'d6\'c3\'d5\'e2\'b8\'f6\'be\'ab\'c1\'e9\'ca\'b5\'c0\'fd\'b5\'c4\'ce\'bb\'d6\'c3
\f0 \
        bg:setPosition(origin.x + visibleSize.width / 2 + 80, origin.y + visibleSize.height / 2)\
        ----
\f1 \'bd\'ab\'be\'ab\'c1\'e9\'b7\'c5\'c8\'eb\'d0\'c2\'b4\'b4\'bd\'a8\'b5\'c4
\f0 Layer
\f1 \'d6\'d0
\f0 \
        layerFarm:addChild(bg)\
\
        -- add land sprite\
        --
\f1 \'d4\'da\'c5\'a9\'b3\'a1\'b5\'c4\'b1\'b3\'be\'b0\'cd\'bc\'c9\'cf\'b5\'c4\'cf\'e0\'d3\'a6\'ce\'bb\'d6\'c3\'b4\'b4\'bd\'a8\'c9\'b3\'b5\'d8\'bf\'e9
\f0 \
        for i = 0, 3 do\
            for j = 0, 1 do\
                --
\f1 \'b4\'b4\'bd\'a8\'c9\'b3\'b5\'d8\'bf\'e9\'b5\'c4\'cd\'bc\'c6\'ac\'be\'ab\'c1\'e9
\f0 \
                local spriteLand = CCSprite:create("land.png")\
                --
\f1 \'c9\'e8\'d6\'c3\'be\'ab\'c1\'e9\'b5\'c4\'ce\'bb\'d6\'c3
\f0 \
                spriteLand:setPosition(200 + j * 180 - i % 2 * 90, 10 + i * 95 / 2)\
                --
\f1 \'bd\'ab\'c9\'b3\'b5\'d8\'bf\'e9\'b5\'c4\'cd\'bc\'c6\'ac\'be\'ab\'c2\'bc\'b7\'c5\'c8\'eb\'b5\'bd\'d0\'c2\'b4\'b4\'bd\'a8\'b5\'c4
\f0 Layer
\f1 \'d6\'d0
\f0 \
                layerFarm:addChild(spriteLand)\
            end\
        end\
\
        -- add crop 
\f1 \'d4\'f6\'bc\'d3\'d7\'f7\'ce\'ef
\f0 \
        local frameCrop = CCSpriteFrame:create("crop.png", CCRectMake(0, 0, 105, 95))\
        for i = 0, 3 do\
            for j = 0, 1 do\
                local spriteCrop = CCSprite:createWithSpriteFrame(frameCrop);\
                spriteCrop:setPosition(10 + 200 + j * 180 - i % 2 * 90, 30 + 10 + i * 95 / 2)\
                layerFarm:addChild(spriteCrop)\
            end\
        end\
\
        -- add moving dog\
        -- 
\f1 \'b5\'f7\'d3\'c3
\f0 createDog
\f1 \'d4\'f6\'bc\'d3\'d2\'bb\'b8\'f6\'d2\'c6\'b6\'af\'b5\'c4\'cb\'c9\'ca\'f3\'be\'ab\'c1\'e9
\f0 \
        local spriteDog = creatDog()\
        -- 
\f1 \'bd\'ab\'cb\'c9\'ca\'f3\'be\'ab\'c2\'bc\'b7\'c5\'c8\'eb\'d0\'c2\'b4\'b4\'bd\'a8\'b5\'c4
\f0 Layer
\f1 \'d6\'d0
\f0 \
        layerFarm:addChild(spriteDog)\
\
        -- handing touch events\
        -- 
\f1 \'b6\'a8\'d2\'e5\'b1\'e4\'c1\'bf
\f0 touchBeginPoint
\f1 \'a3\'ac\'c9\'e8\'ce\'aa\'ce\'b4\'ca\'b9\'d3\'c3
\f0 \
        local touchBeginPoint = nil\
\
        --
\f1 \'b6\'a8\'d2\'e5\'b5\'b1\'b0\'b4\'cf\'c2\'c6\'c1\'c4\'bb\'ca\'b1\'b4\'a5\'b7\'a2\'b5\'c4\'ba\'af\'ca\'fd
\f0  \
        local function onTouchBegan(x, y)\
            --
\f1 \'b4\'f2\'d3\'a1\'ce\'bb\'d6\'c3\'d0\'c5\'cf\'a2
\f0 \
            cclog("onTouchBegan: %0.2f, %0.2f", x, y)\
            --
\f1 \'bd\'ab
\f0 x,y
\f1 \'b4\'e6\'d4\'da\'b1\'e4\'c1\'bf
\f0 touchBeginPoint
\f1 \'d6\'d0
\f0 \
            touchBeginPoint = \{x = x, y = y\}\
            --
\f1 \'d4\'dd\'cd\'a3\'be\'ab\'c1\'e9
\f0 spriteDog
\f1 \'b5\'c4\'d4\'cb\'b6\'af
\f0 \
            spriteDog.isPaused = true\
            -- CCTOUCHBEGAN event must return true\
            return true\
        end\
\
        --
\f1 \'b6\'a8\'d2\'e5\'b5\'b1\'b1\'a3\'b3\'d6\'b0\'b4\'cf\'c2\'c6\'c1\'c4\'bb\'bd\'f8\'d0\'d0\'d2\'c6\'b6\'af\'ca\'b1\'b4\'a5\'b7\'a2\'b5\'c4\'ba\'af\'ca\'fd
\f0 \
        local function onTouchMoved(x, y)\
            cclog("onTouchMoved: %0.2f, %0.2f", x, y)\
            \
            --
\f1 \'c8\'e7\'b9\'fb
\f0 touchBeginPoint
\f1 \'d3\'d0\'d6\'b5
\f0  \
            if touchBeginPoint then\
                --
\f1 \'c8\'a1\'b5\'c3
\f0 layerFarm
\f1 \'b5\'c4\'ce\'bb\'d6\'c3\'a3\'ac\'bd\'ab\'b7\'b5\'bb\'d8\'bd\'e1\'b9\'fb\'b4\'e6\'b7\'c5\'d4\'da
\f0 cx
\f1 \'ba\'cd
\f0 cy
\f1 \'d6\'d0\'a1\'a3
\f0 \
                local cx, cy = layerFarm:getPosition()\
                --
\f1 \'c9\'e8\'d6\'c3
\f0 layerFarm
\f1 \'b5\'c4\'ce\'bb\'d6\'c3\'ca\'dc\'b5\'bd\'b0\'b4\'cf\'c2\'d2\'c6\'b6\'af\'b5\'c4\'c6\'ab\'d2\'c6\'d3\'b0\'cf\'ec
\f0 \
                layerFarm:setPosition(cx + x - touchBeginPoint.x,\
                                      cy + y - touchBeginPoint.y)\
                --
\f1 \'b8\'fc\'d0\'c2\'b5\'b1\'c7\'b0\'b0\'b4\'cf\'c2\'ce\'bb\'d6\'c3\'b4\'e6\'b7\'c5\'b5\'bd\'b1\'e4\'c1\'bf
\f0 touchBeginPoint
\f1 \'d6\'d0
\f0  \
                touchBeginPoint = \{x = x, y = y\}\
            end\
        end\
\
        --
\f1 \'b5\'b1\'c0\'eb\'bf\'aa\'b0\'b4\'cf\'c2\'c6\'c1\'c4\'bb\'ca\'b1
\f0 \
        local function onTouchEnded(x, y)\
            cclog("onTouchEnded: %0.2f, %0.2f", x, y)\
            --
\f1 \'bd\'ab\'b1\'e4\'c1\'bf
\f0 touchBeginPoint
\f1 \'c9\'e8\'ce\'aa\'ce\'b4\'d3\'c3
\f0  \
            touchBeginPoint = nil\
            spriteDog.isPaused = false\
        end\
\
        --
\f1 \'cf\'ec\'d3\'a6\'b0\'b4\'cf\'c2\'ca\'c2\'bc\'fe\'b4\'a6\'c0\'ed\'ba\'af\'ca\'fd
\f0 \
        local function onTouch(eventType, x, y)\
            --
\f1 \'c8\'e7\'b9\'fb\'ca\'c7\'b0\'b4\'cf\'c2\'ca\'b1\'a3\'ac\'b5\'f7\'d3\'c3
\f0 onTouchBegan\
            if eventType == "began" then   \
                return onTouchBegan(x, y)\
            --
\f1 \'c8\'e7\'b9\'fb\'ca\'c7\'b0\'b4\'cf\'c2\'b2\'a2\'d2\'c6\'b6\'af\'ca\'b1\'a3\'ac\'b5\'f7\'d3\'c3
\f0 onTouchMoved\
            elseif eventType == "moved" then\
                return onTouchMoved(x, y)\
            --
\f1 \'cb\'c9\'bf\'aa\'ca\'b1\'a3\'ac\'b5\'f7\'d3\'c3
\f0 onTouchEnded\
            else\
                return onTouchEnded(x, y)\
            end\
        end\
\
        --
\f1 \'b5\'f7\'d3\'c3
\f0 layerFarm
\f1 \'b5\'c4
\f0 registerScriptTouchHandler
\f1 \'ba\'af\'ca\'fd\'d7\'a2\'b2\'e1\'b0\'b4\'cf\'c2\'ca\'c2\'bc\'fe\'b5\'c4\'cf\'ec\'d3\'a6\'ba\'af\'ca\'fd
\f0 \
        layerFarm:registerScriptTouchHandler(onTouch)\
        --
\f1 \'b5\'f7\'d3\'c3
\f0 layerFarm
\f1 \'b5\'c4
\f0 setIsTouchEnabled
\f1 \'ca\'b9
\f0 layerFarm
\f1 \'c4\'dc\'b9\'bb\'cf\'ec\'d3\'a6\'c6\'c1\'c4\'bb\'b0\'b4\'cf\'c2\'ca\'c2\'bc\'fe
\f0 \
        layerFarm:setTouchEnabled(true)\
\
        return layerFarm\
    end\
\
\
    -- create menu\
    --
\f1 \'b4\'b4\'bd\'a8\'b2\'cb\'b5\'a5
\f0 \
    local function createLayerMenu()\
        local layerMenu = CCLayer:create()\
\
        local menuPopup, menuTools, effectID\
\
        local function menuCallbackClosePopup()\
            -- stop test sound effect\
            -- 
\f1 \'cd\'a8\'b9\'fd\'b2\'ce\'ca\'fd
\f0 effectID
\f1 \'b9\'d8\'b1\'d5\'d6\'b8\'b6\'a8\'c9\'f9\'d2\'f4
\f0 \
            AudioEngine.stopEffect(effectID)\
            menuPopup:setVisible(false)\
        end\
\
        local function menuCallbackOpenPopup()\
            -- loop test sound effect\
            local effectPath = CCFileUtils:sharedFileUtils():fullPathForFilename("effect1.wav")\
            effectID = AudioEngine.playEffect(effectPath)\
            menuPopup:setVisible(true)\
        end\
\
        -- add a popup menu\
        local menuPopupItem = CCMenuItemImage:create("menu2.png", "menu2.png")\
        menuPopupItem:setPosition(0, 0)\
        --
\f1 \'d7\'a2\'b2\'e1\'ca\'c2\'bc\'fe
\f0 \
        menuPopupItem:registerScriptTapHandler(menuCallbackClosePopup)\
        menuPopup = CCMenu:createWithItem(menuPopupItem)\
        menuPopup:setPosition(origin.x + visibleSize.width / 2, origin.y + visibleSize.height / 2)\
        menuPopup:setVisible(false)\
        layerMenu:addChild(menuPopup)\
\
        -- add the left-bottom "tools" menu to invoke menuPopup\
        local menuToolsItem = CCMenuItemImage:create("menu1.png", "menu1.png")\
        menuToolsItem:setPosition(0, 0)\
        menuToolsItem:registerScriptTapHandler(menuCallbackOpenPopup)\
        menuTools = CCMenu:createWithItem(menuToolsItem)\
        local itemWidth = menuToolsItem:getContentSize().width\
        local itemHeight = menuToolsItem:getContentSize().height\
        menuTools:setPosition(origin.x + itemWidth/2, origin.y + itemHeight/2)\
        layerMenu:addChild(menuTools)\
\
        return layerMenu\
    end\
\
    -- play background music, preload effect\
\
    -- uncomment below for the BlackBerry version\
    -- local bgMusicPath = CCFileUtils:sharedFileUtils():fullPathForFilename("background.ogg")\
    --
\f1 \'d2\'f4\'c0\'d6
\f0 \
    local bgMusicPath = CCFileUtils:sharedFileUtils():fullPathForFilename("background.mp3")\
    AudioEngine.playMusic(bgMusicPath, true)\
    local effectPath = CCFileUtils:sharedFileUtils():fullPathForFilename("effect1.wav")\
    AudioEngine.preloadEffect(effectPath)\
\
    -- run\
    local sceneGame = CCScene:create()\
    sceneGame:addChild(createLayerFarm())\
    sceneGame:addChild(createLayerMenu())\
    CCDirector:sharedDirector():runWithScene(sceneGame)--
\f1 \'d4\'cb\'d0\'d0\'b8\'c3\'b3\'a1\'be\'b0
\f0 \
end\
--
\f1 \'b5\'f7\'d3\'c3
\f0 \
xpcall(main, __G__TRACKBACK__)\
\
\
\
}